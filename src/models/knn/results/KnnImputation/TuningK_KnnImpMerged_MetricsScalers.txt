#Datos con merged columns y realizando imputación con kan
#CV con 10 folds encontrando mejor valores de k en función de la métrica y el preprocesado, 

Para RobustScaler data

Distance metric, CV score, k_optim
manhattan 0.8051382881631681 51
euclidean 0.8042188802031666 53
minkowski(p=3) 0.802146475668955 53
cosine 0.8041027472454797 52
braycurtis 0.8053679086808725 54
canberra 0.7920226710580269 29
chebyshev 0.7990410433448408 37
correlation 0.8039885983360449 58
seuclidean 0.7898367789637978 15
mahalanobis 0.7376133222226631 75

Para StandardScaler data

Distance metric, CV score, k_optim
manhattan 0.7950140867425896 19
euclidean 0.7897222332447125 15
minkowski(p=3) 0.788342129280584 15
cosine 0.7923694826924857 19
braycurtis 0.7959344205917754 22
canberra 0.7969686388106292 32
chebyshev 0.7818999246061665 9
correlation 0.792023861486978 25
seuclidean 0.7915629009430842 15
mahalanobis 0.6835388807322461 40

Para Normalizer data

Distance metric, CV score, k_optim
manhattan 0.8061698609843525 34
euclidean 0.8047906829094084 34
minkowski(p=3) 0.8035260505535493 56
cosine 0.8041007631972276 51
braycurtis 0.8067453672473315 34
canberra 0.8013388357604857 19
chebyshev 0.8032962977659617 51
correlation 0.8044450617039006 30
seuclidean 0.8036411253521687 57
mahalanobis 0.7870759096861236 19